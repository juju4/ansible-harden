{{ ansible_managed | comment }}

check process sshd
  with pidfile "/var/run/sshd.pid" every 5 cycles
  group system
  group sshd
{% if ansible_service_mgr == 'systemd' %}
  start program = "/bin/systemctl start ssh" with timeout 60 seconds
  stop program  = "/bin/systemctl stop ssh"
{% elif ansible_distribution == 'Alpine' %}
  start program = "/etc/init.d/sshd start" with timeout 60 seconds
  stop program  = "/etc/init.d/sshd stop"
{% else %}
  start program = "/etc/init.d/ssh start" with timeout 60 seconds
  stop program  = "/etc/init.d/ssh stop"
{% endif %}
  if cpu > 90% for 15 cycles then alert
  if totalmem > 90% for 15 cycles then alert
  if failed host {{ harden_sshd_listen | default('127.0.0.1') }} port {{ harden_sshd_port }} protocol ssh then restart
  if 5 restarts with 5 cycles then alert
  depends on sshd_binary
# mmonit.com service_poll_time
# not every "* 2-4 * * *"

check file sshd_binary
  with path /usr/sbin/sshd
  group sshd
  if failed checksum then alert

check file sshd_conf with path /etc/ssh/sshd_config
{% if ansible_os_family == 'Debian' %}
  include /etc/monit/templates/rootrc
{% endif %}
  group sshd
  if not exist then alert
  if changed checksum then alert
