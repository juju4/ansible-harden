---

- name: Secure Mount options
  ansible.builtin.mount:
    name: "{{ outer_item.mount }}"
    # src: "{{ item.device }}"
    # src: "UUID={{ item.uuid }}"
    src: >-
      {% if ansible_virtualization_type is defined and ansible_virtualization_type == 'lxc' %}{{ item.device }}
      {% else %}UUID={{ item.uuid }}{% endif %}
    state: present
    fstype: "{{ item.fstype }}"
    opts: "{{ outer_item.opts | default(item.options) | regex_replace('^rw,seclabel,relatime,attr2,inode64,noquota$', 'defaults') }}"
  when: item.mount == outer_item.mount
  with_items: "{{ ansible_mounts }}"
  ## Note: better to use notify than state=mounted which is immediate. other part of role might conflict else
  # notify:
  #   - reload fstab
  register: mountopts

- name: Debug | mountopts var
  ansible.builtin.debug: var=mountopts
- name: Debug | mountopts first entry var
  ansible.builtin.debug: var=mountopts.results[0]
## man 8 mount: 'After this call mount reads fstab (or mtab) and merges these options with options
##      from command line ( -o ).'
- name: Remount changed mount points
  ansible.builtin.command: "mount -o remount {{ item.item.mount }}"  # noqa 503 303
  when: item.changed
  with_items: "{{ mountopts.results }}"
