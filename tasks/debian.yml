---

- name: Configure Debian Signature check
  replace:
    dest: /etc/dpkg/dpkg.cfg
    regexp: "^{% if not harden_debsig_enable %}#{%endif %}no-debsig"
    replace: "{% if harden_debsig_enable %}#{%endif %}no-debsig"
    mode: '0644'
    backup: "{{ harden_backup | default(false) }}"

## FIXME! kitchen OK, travis NOK
## Error! Your kernel headers for kernel 3.19.0-58-generic cannot be found
- name: Debian | upgrade all packages to the latest version
  apt: upgrade=dist
  async: 3600
  poll: 300
  when: (harden_upgradeall is defined and harden_upgradeall) and (travisci is not defined or not travisci)
  register: pkg_result
  until: pkg_result is success

- name: Debian | Remove rpc-related packages
  apt:
    name: rpcbind
    state: absent
    purge: yes
  when: harden_use_rpc is not defined or not harden_use_rpc
  register: pkg_result
  until: pkg_result is success

- name: Debian | Remove container lxc-related packages
  apt:
    name: ['lxd', 'lxcfs', 'lxc-common', 'liblxc1']
    state: absent
    purge: yes
  when: harden_use_containers_lxc is not defined or not harden_use_containers_lxc
  register: pkg_result
  until: pkg_result is success

- include: unattended-upgrades.yml
  when: harden_security_update_auto

- name: Debug | ansible_mounts var
  debug: var=ansible_mounts
- name: add apt hardening with somme immutable directories
  template: "src=99security dest=/etc/apt/apt.conf.d owner=root mode=0644"

- include: debian-logcheck.yml
  when: harden_logcheck is defined and harden_logcheck

- name: Enable sysstat sar collection
  replace:
    dest: '/etc/default/sysstat'
    regexp: '^ENABLED="false"'
    replace: 'ENABLED="true"'
    mode: '0644'
  notify:
    - restart sysstat

- name: Check if rng-tools is present
  stat: path=/etc/default/rng-tools
  register: rngconf
- name: Debian | More entropy
  lineinfile:
    dest: '/etc/default/rng-tools'
    regexp: '^HRNGDEVICE=/dev/urandom'
    mode: '0644'
    insertafter: '^#HRNGDEVICE=/dev/null'
    line: 'HRNGDEVICE=/dev/urandom'
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and rngconf.stat.exists

## https://bugs.launchpad.net/ubuntu/+source/debsecan/+bug/95925
- block:
    - name: Ubuntu | Disable automatic report of debsecan
      replace:
        dest: /etc/default/debsecan
        regexp: '^REPORT=.*'
        replace: 'REPORT=false'
        mode: '0644'
        backup: "{{ harden_backup | default(false) }}"
    - name: Ubuntu | Disable debsecan cron
      replace:
        dest: /etc/cron.d/debsecan
        regexp: '^([0-9].*) * * * * daemon test -x /usr/bin/debsecan && /usr/bin/debsecan --cron'
        replace: '#\1 * * * * daemon test -x /usr/bin/debsecan && /usr/bin/debsecan --cron'
        mode: '0644'
  when: ansible_distribution == 'Ubuntu'
- name: Debian | define distribution of debsecan
  replace:
    dest: /etc/default/debsecan
    regexp: '^SUITE=.*'
    replace: 'SUITE={{ ansible_distribution_release }}'
    mode: '0644'
    backup: "{{ harden_backup | default(false) }}"
  when: ansible_distribution == 'Debian'

## http://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/
## https://bugzilla.redhat.com/show_bug.cgi?id=455713
## https://wiki.archlinux.org/index.php/Capabilities
## https://wiki.archlinux.org/index.php/DeveloperWiki:Security#Replacing_setuid_with_capabilities
## https://wiki.ubuntu.com/Security/Investigation/Setuid
## FIXME! same for chroot cap and others
## FIXME! not idempotent, https://github.com/ansible/ansible/issues/18911
## Not setpcap in unprivileged lxc container,
##      https://lists.linuxcontainers.org/pipermail/lxc-users/2016-February/010998.html
- name: Check if capabilities are set
  shell: >
    getcap {{ harden_cap_test_bin | default('/usr/sbin/tcpdump') }} | awk -F' = ' '{ gsub(" ", ",", $2); print $2 }'
  register: getcap1
  changed_when: false
  ignore_errors: true
- name: Debug | getcap1 var
  debug: var=getcap1.stdout
- block:
    - debug: var=ansible_virtualization_type
    - name: Capabilities Hardening - default network tools
      capabilities:
        path: "{{ item.bin }}"
        capability: 'cap_net_raw+pe'
        state: present
      with_items: "{{ harden_cap_list }}"
    - name: ensure permissions are not setuid - using capabilities
      file:
        path: "{{ item.bin }}"
        mode: "{{ item.mode | default('0755') }}"
      with_items: "{{ harden_cap_list }}"
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        )
    and getcap1.stdout is defined and getcap1.stdout != harden_cap_test_bincap

- name: check if /etc/init.d/rc exists
  stat: path=/etc/init.d/rc
  register: rcfile
- block:
    - name: Check attribute of immutable test file
      command: "lsattr {{ immutable_testfile }}"
      register: rclsattr
      changed_when: false
    - name: Debug | rclsattr var
      debug: var=rclsattr.stdout
    - name: remove temporarily immutable flag on file
      command: "chattr -i /etc/init.d"
      when: >
        rclsattr.stdout.find("----i-") == -1 and
        not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")
    - name: set umask in /etc/init.d/rc
      lineinfile:
        dest: /etc/init.d/rc
        regexp: '^umask '
        line: "umask {{ harden_umask }}"
        mode: '0644'
      when: ansible_distribution == "Ubuntu"
    - name: re-set immutable flag on file
      command: "chattr +i /etc/init.d"
      when: >
        rclsattr.stdout.find("----i-") == -1 and
        not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")
      ignore_errors: true
  when: rcfile.stat.exists

- include: apparmor-audit.yml
  when: harden_apparmor_audit
