---
## https://jerrygamblin.com/2017/08/24/disallow-million-most-common-passwords/
## http://thegarywilson.com/blog/2006/using-cracklib-to-require-stronger-passwords/

- name: Recover dictionary files
  ansible.builtin.get_url:
    url: "{{ item.u }}"
    dest: "/usr/share/dict/{{ item.u | basename }}"
    mode: '0644'
    checksum: "{{ item.h }}"
  with_items: "{{ harden_cracklib_dict }}"
  when: ansible_os_family == 'Debian' or (ansible_os_family == 'RedHat' and ansible_distribution_major_version | int < 7)

- name: Check for cracklib refresh marker
  ansible.builtin.stat:
    path: /usr/share/dict/.ansible_cracklib_update
  register: cracklibrefresh
- name: Debian | Cracklib db does not exist
  when: ansible_os_family == 'Debian' and not cracklibrefresh.stat.exists
  block:
    - name: Debian | create cracklib database
      ansible.builtin.command: "create-cracklib-dict /usr/share/dict/*"  # noqa no-changed-when
      ## just a refresh = not idempotent
      # args:
      #   creates: /var/cache/cracklib/cracklib_dict.pwd
- name: RedHat | Cracklib db does not exist
  when: >
    (ansible_os_family == 'RedHat' and ansible_distribution_major_version | int < 7) and
    not cracklibrefresh.stat.exists
  block:
    - name: RedHat | create cracklib database
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          mkdict /usr/share/dict/* | packer /usr/lib/cracklib_dict"  # noqa no-changed-when
      args:
        executable: /bin/bash
        # creates: /usr/lib/cracklib_dict.pwd
- name: Add cracklib refresh marker
  ansible.builtin.file:
    path: /usr/share/dict/.ansible_cracklib_update
    mode: '0600'
    state: touch
  when: >
    (ansible_os_family == 'Debian' or
      (ansible_os_family == 'RedHat' and ansible_distribution_major_version | int < 7)
    ) and not cracklibrefresh.stat.exists

- name: Redhat | password criteria
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version | int >= 7
  block:
    # complexity... do we still want that?
    - name: RedHat | Set Password Strength complexity
      ansible.builtin.lineinfile:
        dest: /etc/security/pwquality.conf
        regexp: "{{ item.re }}"
        line: "{{ item.l }}"
        mode: '0644'
        backup: "{{ harden_backup | default(false) }}"
      with_items:
        - { re: '^dcredit=.*', l: 'dcredit=1' }
        - { re: '^ucredit=.*', l: 'ucredit=1' }
        - { re: '^lcredit=.*', l: 'lcredit=1' }
      when: harden_rhel_pwquality_with_complexity
    - name: RedHat | Set Password Minimum Length
      ansible.builtin.lineinfile:
        dest: /etc/security/pwquality.conf
        regexp: '^minlen=.*'
        line: "minlen={{ harden_rhel_pwquality_minlen | default(16) }}"
        mode: '0644'
        backup: "{{ harden_backup | default(false) }}"
