---
# https://access.redhat.com/security/vulnerabilities/speculativeexecution
# https://gist.github.com/ErikAugust/724d4a969fb2c6ae1bbd7b2a9e3d4bb6
# https://twitter.com/pwnallthethings/status/948693961358667777
# https://github.com/Eugnis/spectre-attack/blob/master/Source.c

- name: Ensure dev tools are present
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items: "{{ build_dev_tools }}"
  register: pkg_result
  until: pkg_result is success

- name: Download speculative execution sample code
  ansible.builtin.get_url:
    url: >
      https://gist.githubusercontent.com/jedisct1/3bbb6e50b768968c30629bf734ea49c6/raw/6ede3c9a3356a4a55a27febaf38157897c4fed09/spectre.c
    dest: /tmp/spectre.c
    mode: '0600'
    owner: nobody

- name: Compile sample code
  ansible.builtin.command: gcc -std=c99 -O0 spectre.c -o spectre
  args:
    chdir: /tmp
    creates: /tmp/spectre

- name: Run sample code
  ansible.builtin.shell: ./spectre | tee /tmp/speculative-spectre.log
  args:
    chdir: /tmp
    creates: /tmp/speculative-spectre.log
  become: yes
  become_user: nobody
  register: spectre
  ignore_errors: true

- name: Debug | spectre output
  ansible.builtin.debug: var=spectre

- name: Retrieve Am-I-affected-by-Meltdown
  ansible.builtin.git:
    repo: https://github.com/raphaelsc/Am-I-affected-by-Meltdown.git
    dest: /tmp/Am-I-affected-by-Meltdown
    version: "{{ harden_aiabm_version | default('b6f80766da112e3fa09e8c4f73a82f7451f9c8f7') }}"
    update: no
  become: yes
  become_user: nobody

- name: Build Am-I-affected-by-Meltdown
  ansible.builtin.command: make
  args:
    chdir: /tmp/Am-I-affected-by-Meltdown
    creates: /tmp/Am-I-affected-by-Meltdown/meltdown-checker

# root required as kptr_restrict set to 1
- name: Test Am-I-affected-by-Meltdown
  ansible.builtin.shell: ./meltdown-checker | tee /var/log/speculative-meltdown-checker.log
  args:
    chdir: /tmp/Am-I-affected-by-Meltdown
    creates: /var/log/speculative-meltdown-checker.log
  register: meltdown
  ignore_errors: true

- name: Debug | meltdown output
  ansible.builtin.debug: var=meltdown

- name: Retrieve another meltdown poc
  ansible.builtin.git:
    repo: https://github.com/paboldin/meltdown-exploit.git
    dest: /tmp/meltdown-exploit
    version: "{{ harden_me_version | default('36e17ef649657ff35b76d59e597fdf7f412beb9c') }}"
    update: no
  become: yes
  become_user: nobody

- name: Build meltdown-exploit
  ansible.builtin.command: make
  args:
    chdir: /tmp/meltdown-exploit
    creates: /tmp/meltdown-exploit/meltdown

# root required as kptr_restrict set to 1
- name: Test meltdown-exploit
  ansible.builtin.shell: ./run.sh | tee /var/log/speculative-meltdown-exploit-log
  args:
    chdir: /tmp/meltdown-exploit
    creates: /var/log/speculative-meltdown-exploit-log
  register: meltdown2
  ignore_errors: true

- name: Debug | meltdown2 output
  ansible.builtin.debug: var=meltdown2

- name: Retrieve IAIK poc
  ansible.builtin.git:
    repo: https://github.com/IAIK/meltdown.git
    dest: /tmp/meltdown-iaik
    version: "{{ harden_mi_version | default('f4f636d9052e729574abfa5cfd251423ac9deca9') }}"
    update: no
  become: yes
  become_user: nobody

- name: Ensure IAIK poc dependencies are present
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - glibc-static
    - util-linux
  ignore_errors: true
  register: pkg_result
  until: pkg_result is success

- name: Build IAIK poc
  ansible.builtin.command: make
  args:
    chdir: /tmp/meltdown-iaik
    creates: /tmp/meltdown-iaik/test
  when: >
    not (ansible_os_family=="RedHat" and ansible_distribution_major_version|int >= 8)

- name: Test IAIK poc
  ansible.builtin.shell: taskset 0x1 ./test | tee /var/log/speculative-IAIK.log
  args:
    chdir: /tmp/meltdown-iaik
    creates: /var/log/speculative-IAIK.log
  become: yes
  become_user: nobody
  register: iaik1
  ignore_errors: true
  when: >
    not (ansible_os_family=="RedHat" and ansible_distribution_major_version|int >= 8)

- name: Debug | IAIK output
  ansible.builtin.debug: var=iaik1

# - name: test IAIK poc - root
#   ansible.builtin.command: "{{ item }}"
#   args:
#     chdir: /tmp/meltdown-iaik
#   with_items:
## FIXME! travis/xenial: produce output with no end = The log length has exceeded the limit of 4 MB
## FIXME! travis/debian9: No output has been received in the last 10m0s
##    - taskset 0x1 ./kaslr
## FIXME! travis/centos7: No output has been received in the last 10m0s
##    - taskset 0x1 ./reliability 0xffff880000000000
#    - nohup ./secret
## FIXME! travis/alpine37: execution seen as not root + No output has been received in the last 10m0s
##    - taskset 0x1 ./physical_reader 0x390fff400 0xffff880000000000
#   become: yes
#   become_user: root
#   register: iaik2
#   ignore_errors: true
#
# - debug: var=iaik2

- name: Retrieve another check
  ansible.builtin.git:
    repo: https://github.com/speed47/spectre-meltdown-checker.git
    dest: /tmp/spectre-meltdown-checker
    version: "{{ harden_smc_version | default('d7d2e6934ba08a2de2e2c80bb42936a60b884b78') }}"
    update: no
  become: yes
  become_user: nobody

# root required
- name: Run spectre-meltdown-checker
  ansible.builtin.shell: ./spectre-meltdown-checker.sh | tee /tmp/speculative-spectre-meltdown-checker.log
  args:
    chdir: /tmp/spectre-meltdown-checker
    creates: /tmp/spectre-meltdown-checker.log
  register: checker
  ignore_errors: true

- name: Debug | spectre-meltdown-checker output
  ansible.builtin.debug: var=checker.stdout_lines
  when: checker is defined
