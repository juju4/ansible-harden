---

- name: Testing | Ensure testing packages are present
  ansible.builtin.package:
    name: "{{ testing_pkgs }}"
    state: present

- name: Testing | inspec
  when: harden_testing_inspec and (ansible_os_family == "Debian" or ansible_os_family == "RedHat")
  block:
    # - name: testing | Ensure ruby and dependencies are present
    #   ansible.builtin.package:
    #     name: "{{ item }}"
    #     state: present
    #   with_items: "{{ testing_pkgs }}"
    # - name: testing | Ensure inspec is present
    #   ansible.builtin.gem:
    #     name: "{{ item }}"
    #     state: present
    #     user_install: no
    #   with_items:
    #     - rake
    #     - inspec
    - name: Download inspec package
      ansible.builtin.get_url:
        url: "{{ inspec_url }}"
        dest: "/tmp/{{ inspec_url | basename }}"
        checksum: "{{ inspec_hash }}"
        mode: '0600'
      register: dl_result
      until: dl_result is success
    - name: Debian | install chef public key for inspec package
      ansible.builtin.apt_key:
        url: https://packages.chef.io/chef.asc
        state: present
      when: ansible_os_family == 'Debian'
      register: pkg_result
      until: pkg_result is success
    - name: Debian | install inspec package
      ansible.builtin.apt:
        deb: "/tmp/{{ inspec_url | basename }}"
        state: present
      when: ansible_os_family == 'Debian'
      register: pkg_result
      until: pkg_result is success
    - name: RedHat | install chef public key for inspec package
      ansible.builtin.rpm_key:
        key: https://packages.chef.io/chef.asc
        state: present
      when: ansible_os_family == 'RedHat'
      register: pkg_result
      until: pkg_result is success
    - name: RedHat | install inspec package
      ansible.builtin.yum:
        name: "/tmp/{{ inspec_url | basename }}"
        state: present
      when: ansible_os_family == 'RedHat'
      register: pkg_result
      until: pkg_result is success

    - name: Testing | accept inspec license - directory
      ansible.builtin.file:
        path: /etc/chef/accepted_licenses
        state: directory
        mode: '0755'

    # https://github.com/chef/automate/issues/83
    # https://github.com/chef/automate/pull/95 (alternative with ENV)
    - name: Testing | accept inspec license
      ansible.builtin.file:
        path: /etc/chef/accepted_licenses/inspec
        mode: '0644'
        state: touch

    - name: Testing | run linux-baseline
      # shell: "inspec exec {{ harden_testing_inspec_paths | join(' ') }} | tee /var/log/inspec.log"
      ansible.builtin.shell: >
        inspec exec inspec --input-file inspec/profile-attributes-{{ ansible_os_family }}.yml |
            tee {{ log_dir | default('/var/log') }}/inspec.log |
            sed -r "s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"
      args:
        chdir: "{{ inspec_dir | default('/tmp/kitchen/juju4.harden/test/integration/default') }}"
        creates: "{{ log_dir | default('/var/log') }}/inspec.log"
      failed_when: false
      register: inspeclog
      changed_when: false
    - name: Debug | inspec output
      ansible.builtin.debug:
        var: inspeclog.stdout_lines

    - name: Testing | run inspec baselines
      ansible.builtin.shell: >
        inspec exec {{ item.u }} --attrs inspec/profile-attributes-{{ ansible_os_family }}.yml |
            tee -a {{ log_dir | default('/var/log') }}/inspec-{{ item.i }}.log |
            sed -r "s/\\x1B\\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"
      args:
        chdir: "{{ inspec_dir | default('/tmp/kitchen/juju4.harden/test/integration/default') }}"
        creates: "/var/log/inspec-{{ item.i }}.log"
      with_items: "{{ harden_testing_inspec_paths }}"
      failed_when: false
      changed_when: false

- name: Import testing-check
  ansible.builtin.import_tasks: testing-check.yml
  when: harden_testing_check

- name: Import testing-privesc
  ansible.builtin.import_tasks: testing-privesc.yml
  when: harden_testing_privesc

- name: Import testing-speculative
  ansible.builtin.import_tasks: testing-speculative.yml
  when: harden_testing_speculative
