---
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/sec-signing_ssh_certificates
# https://smallstep.com/blog/use-ssh-certificates/

- name: Orchestrator | Ensure SSH CA dirname has right permissions
  file:
    dest: "{{ harden_sshd_ca_path | dirname }}"
    state: directory
    mode: '0700'
  connection: local
  when: harden_sshd_ca_path | dirname != '/tmp'

- name: Check if SSH CA exists (pubkey)
  stat:
    path: "{{ harden_sshd_ca_path }}.pub"
  register: sshca
  connection: local

- name: Orchestrator | Generate SSH CA
  openssh_keypair:
    path: "{{ harden_sshd_ca_path }}"
    type: "{{ harden_sshd_ca_type | default('ed25519') }}"
    mode: "{{ harden_sshd_ca_mode | default('0400') }}"
    owner: "{{ harden_sshd_ca_user | default('root') }}"
    group: "{{ harden_sshd_ca_group | default('root') }}"
  connection: local
  when: not sshca.stat.exists

- name: debug
  command: "ls -la {{ harden_sshd_ca_path | dirname }}"
  ignore_errors: true
  changed_when: false

- name: Ensure SSH CA public key is present on target
  copy:
    src: "{{ harden_sshd_ca_path }}.pub"
    dest: "{{ harden_sshd_trusteduserca }}"
    mode: '0644'
    remote_src: "{{ harden_sshd_remote_src | default('no') }}"

- name: Check if SSH host key is signed
  stat:
    path: "{{ harden_sshd_host_key | default('/etc/ssh/ssh_host_ed25519_key.pub') | regex_replace('.pub$', '-cert.pub') }}"
  register: sshhost_signed

- block:
    - name: Retrieve SSH host key
      fetch:
        src: "{{ harden_sshd_host_key | default('/etc/ssh/ssh_host_ed25519_key.pub') }}"
        dest: "{{ harden_sshd_host_key_opath | default('/tmp') }}"
        mode: '0400'

    - name: Ensure SSH keys have right permissions
      file:
        dest: "{{ item }}"
        mode: '0400'
        owner: "{{ lookup('env', 'USER') }}"
      with_items:
        - "{{ harden_sshd_host_key_opath | default('/tmp') }}/{{ inventory_hostname }}{{ harden_sshd_host_key | default('/etc/ssh/ssh_host_ed25519_key.pub') }}"
        - "{{ harden_sshd_ca_path }}"
      connection: local

    - name: Sign SSH host key
      command: >
        ssh-keygen -s {{ harden_sshd_ca_path }} \
          -I "{{ ansible_hostname }}" \
          -h -Z {{ ansible_fqdn }} \
          -V {{ harden_sshd_host_key_validity | default('-1d:+54w') }} \
          {{ harden_sshd_host_key_opath | default('/tmp') }}/{{ inventory_hostname }}{{ harden_sshd_host_key | default('/etc/ssh/ssh_host_ed25519_key.pub') }}
      args:
        creates: "{{ harden_sshd_host_key_opath | default('/tmp') }}/{{ inventory_hostname }}/{{ harden_sshd_host_key | default('/etc/ssh/ssh_host_ed25519_key.pub') | regex_replace('.pub$', '-cert.pub') }}"
      connection: local

    - name: Return SSH host key signed
      copy:
        src: "{{ harden_sshd_host_key_opath | default('/tmp') }}/{{ inventory_hostname }}/{{ harden_sshd_host_key | default('/etc/ssh/ssh_host_ed25519_key.pub') | regex_replace('.pub$', '-cert.pub') }}"
        dest: "{{ harden_sshd_host_key | default('/etc/ssh/ssh_host_ed25519_key.pub') | regex_replace('.pub$', '-cert.pub') }}"
        mode: '0444'
      when: inventory_hostname != 'localhost'
  when: not sshhost_signed.stat.exists

# FIXME! file created as root?
- name: Sign SSH user keys on orchestrator
  command: >
    ssh-keygen -s {{ harden_sshd_ca_path }} \
      -I "{{ item.identifier }}" -n "{{ item.principals }}" \
      {{ item.options | default('-O source-address=10.0.0.0/8') }} \
      -V {{ item.validity | default('-1d:+52w1d') }} \
      -z {{ item.serial }} {{ item.pubkey }}
  args:
    creates: "{{ item.pubkey | regex_replace('.pub$', '-cert.pub') }}"
  with_items: "{{ harden_sshd_ca_signing_userkeys }}"
  connection: local
