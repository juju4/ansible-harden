---

# agetty(8), https://twitter.com/renard_0/status/1207077535013654528, https://jpmens.net/2019/12/18/ip-address-of-machine-on-console/
- name: Configure /etc/issue
  ansible.builtin.lineinfile:
    dest: /etc/issue
    regexp: "{{ item.re }}"
    line: "{{ item.l }}"
    mode: '0644'
  with_items: "{{ harden_issue_lines | default([]) }}"

- name: Set better login.defs
  ansible.builtin.lineinfile:
    dest: /etc/login.defs
    regexp: "{{ item.r }}"
    line: "{{ item.l }}"
    mode: '0644'
  with_items:
    - { r: '^PASS_MAX_DAYS', l: "PASS_MAX_DAYS   {{ harden_logindefs_pass_maxdays }}" }
    - { r: '^PASS_WARN_AGE', l: "PASS_WARN_AGE    {{ harden_logindefs_pass_warnage }}" }
    - { r: '^LOGIN_RETRIES', l: "LOGIN_RETRIES    {{ harden_logindefs_login_retries }}" }
    - { r: '^LOGIN_TIMEOUT', l: "LOGIN_TIMEOUT    {{ harden_logindefs_login_timeout }}" }
    - { r: '^ENV_SUPATH', l: "ENV_SUPATH      {{ harden_logindefs_env_supath }}" }
    - { r: '^ENV_PATH', l: "ENV_PATH        {{ harden_logindefs_env_path }}" }
    - { r: '^UMASK', l: "UMASK     {{ harden_umask }}" }
  when: ansible_os_family != "Alpine"

- name: Set Account Expiration Following Inactivity
  ansible.builtin.lineinfile:
    dest: /etc/default/useradd
    regexp: '^INACTIVE=.*'
    line: 'INACTIVE=90'
    mode: '0644'
  when: ansible_os_family != "Alpine"

## https://unixserveradmin.wordpress.com/2012/12/08/how-to-stop-usb-mass-storage-device-in-rhelcentos/
- name: Disable USB
  when: harden_disable_usb is defined and harden_disable_usb
  block:
    - name: Disable usb storage drivers - modprobe
      ansible.builtin.lineinfile:
        dest: /etc/modprobe.d/no-usb.conf
        line: 'install usb-storage /bin/true'
        mode: '0644'
        create: yes
    - name: Check if grub is present
      ansible.builtin.stat:
        path: /etc/default/grub
      register: defgrub
    - name: Disable usb storage drivers - grub
      ansible.builtin.replace:
        dest: /etc/default/grub
        regexp: 'GRUB_CMDLINE_LINUX="(.*)nousb(.*)"'
        replace: '\1nousb\2'
        mode: '0644'
        backup: "{{ harden_backup | default(false) }}"
      ## http://security.stackexchange.com/questions/49097/protecting-against-firewire-dma-vulnerabilities-in-linux
      when: ansible_os_family != "Alpine" and (defgrub is defined and defgrub.stat.exists)
- name: Allow USB
  when: not (harden_disable_usb is defined and harden_disable_usb)
  block:
    - name: Ensure usb storage drivers not disabled at modprobe level
      ansible.builtin.file:
        dest: /etc/modprobe.d/no-usb.conf
        state: absent
    - name: Check if grub is present
      ansible.builtin.stat:
        path: /etc/default/grub
      register: defgrub
    - name: Disable usb storage drivers - grub
      ansible.builtin.replace:
        dest: /etc/default/grub
        regexp: 'GRUB_CMDLINE_LINUX="(.*)nousb(.*)"'
        replace: '\1\2'
        mode: '0644'
        backup: "{{ harden_backup | default(false) }}"
      ## http://security.stackexchange.com/questions/49097/protecting-against-firewire-dma-vulnerabilities-in-linux
      when: ansible_os_family != "Alpine" and (defgrub is defined and defgrub.stat.exists)

- name: Disable firewire DMA drivers - modprobe
  ansible.builtin.lineinfile:
    dest: /etc/modprobe.d/no-firewire.conf
    line: "{{ item }}"
    mode: '0644'
    create: yes
  with_items:
    - 'blacklist ohci1394'
    - 'blacklist sbp2'
    - 'blacklist dv1394'
    - 'blacklist raw1394'
    - 'blacklist video1394'
    - 'blacklist firewire-ohci'
    - 'blacklist firewire-sbp2'
  notify:
    - Update-initramfs

- name: Disable Distribution bug report
  when: >
    ansible_system == 'Linux' and harden_linux_disable_bugreport is defined and
    harden_linux_disable_bugreport and
    not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")
  block:
    - name: Ubuntu | check if apport is present
      ansible.builtin.stat:
        path: /etc/default/apport
      register: defapport
      when: ansible_distribution == 'Ubuntu'
    - name: Ubuntu | ensure Apport crash report is disabled
      ansible.builtin.replace:
        dest: /etc/default/apport
        regexp: '^enabled=.*$'
        replace: 'enabled=0'
        mode: '0644'
      when: ansible_distribution == 'Ubuntu' and defapport.stat.exists
    - name: Set sensible core pattern
      ansible.posix.sysctl:
        name: "kernel.core_pattern"
        value: "/tmp/cores/core.%e.%p.%h.%t"
        sysctl_set: yes
        state: present
        reload: yes
      when: >
        not (ansible_os_family == 'RedHat' and
              (ansible_virtualization_type is defined and ansible_virtualization_type == "lxc")
            )
        and not (
              (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version | int >= 20) and
              (ansible_virtualization_type is defined and ansible_virtualization_type == "lxc")
            )

- name: Import iptables
  ansible.builtin.import_tasks: iptables.yml
  when: ansible_os_family == 'Debian' or ansible_os_family == "RedHat" or ansible_os_family == "Alpine"

- name: Import usb
  ansible.builtin.import_tasks: usb.yml
  when: harden_usb_restrict_udev

- name: Import aide-hids
  ansible.builtin.import_tasks: aide-hids.yml
  when: harden_aide and (ansible_os_family == 'Debian' or ansible_os_family == "RedHat")

- name: Import ubuntu-livepatch
  ansible.builtin.import_tasks: ubuntu-livepatch.yml
  when:
    - ansible_distribution == 'Ubuntu'
    - '"LTS" in ansible_lsb["description"]'
    - ansible_distribution_major_version | int >= 16
    - harden_ubuntu_livepatch is defined
    - harden_ubuntu_livepatch

- name: Import redhat-kpatch
  ansible.builtin.import_tasks: redhat-kpatch.yml
  when: >
    ansible_distribution == 'RedHat Enterprise Linux' and ansible_distribution_version == '7.2' and
    harden_rhel_kpatch is defined and harden_rhel_kpatch

- name: Import grub
  ansible.builtin.import_tasks: grub.yml
- name: Import monit
  ansible.builtin.import_tasks: monit.yml
  when: >
    not (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int == 8)
- name: Import passwd
  ansible.builtin.import_tasks: passwd.yml

- name: Alpine rsyslog
  when: ansible_distribution == "Alpine"
  block:
    - name: Alpine | Ensure /etc/rsyslog.d exists
      ansible.builtin.file:
        dest: /etc/rsyslog.d
        state: directory
        owner: root
        mode: '0755'
    - name: Alpine | Ensure rsyslog use rsyslog.d directory
      ansible.builtin.lineinfile:
        dest: /etc/rsyslog.conf
        regexp: '^\$IncludeConfig /etc/.*'
        line: '$IncludeConfig /etc/rsyslog.d/*.conf'
        mode: '0644'
        backup: "{{ harden_backup | default(false) }}"

- name: Disable unused filesystems modules
  ansible.builtin.template:
    src: "{{ harden_modprobe_template }}"
    dest: /etc/modprobe.d/dev-sec.conf
    mode: '0644'
    backup: "{{ harden_backup | default(false) }}"
  when: harden_modprobe_template is defined

- name: Import lkrg
  ansible.builtin.import_tasks: lkrg.yml
  when: >
    harden_lkrg and
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        )

- name: Import proxy
  ansible.builtin.import_tasks: proxy.yml
  when: harden_proxy | bool
