---
# https://www.openwall.com/lkrg/
# https://openwall.info/wiki/p_lkrg/Main

- name: Download lkrg files
  ansible.builtin.get_url:
    url: "{{ item.u }}"
    dest: "{{ install_archives }}/{{ item.u | basename }}"
    owner: root
    mode: "{{ item.m }}"
    checksum: "{{ item.c | default(omit) }}"
  with_items:
    - { u: "https://lkrg.org/download/lkrg-{{ harden_lkrg_version }}.tar.gz", m: '0600' }
    - { u: "https://lkrg.org/download/lkrg-{{ harden_lkrg_version }}.tar.gz.sign", m: '0600' }
    - { u: 'https://www.openwall.com/signatures/openwall-offline-signatures.asc',
        c: 'sha256:8807d12ff271891e21491552880541aed0fa525d30cfec0df0e8fcfe56f46cd8',
        m: '0600'
    }

- name: Import openwall gpg key  # noqa 301
  ansible.builtin.command: >
    gpg --import {{ install_archives }}/openwall-offline-signatures.asc
  register: gpg_import
  changed_when: "'gpg: Total number processed: 1' in gpg_import.stderr"

- name: Validate lkrg hash signature
  ansible.builtin.command: >
    gpg --verify {{ install_archives }}/lkrg-{{ harden_lkrg_version }}.tar.gz.sign {{ install_archives }}/lkrg-{{ harden_lkrg_version }}.tar.gz
  changed_when: false

- name: lkrg dependencies install
  ansible.builtin.package:
    name: "{{ lkrg_dep_pkgs }}"
    state: present
    update_cache: yes
  register: pkg_result
  until: pkg_result is success

- name: uncompress lkrg
  ansible.builtin.unarchive:
    src: "{{ install_archives }}/lkrg-{{ harden_lkrg_version }}.tar.gz"
    dest: "{{ install_archives }}"
    mode: '0755'
    creates: "{{ install_archives }}/lkrg-{{ harden_lkrg_version }}/INSTALL"
    remote_src: true

- name: build lkrg
  ansible.builtin.command: make -j8  # noqa 301
  args:
    chdir: "{{ install_archives }}/lkrg-{{ harden_lkrg_version }}"

- name: Debian | fix systemd service file destination path
  ansible.builtin.replace:
    dest: "{{ install_archives }}/lkrg-{{ harden_lkrg_version }}/scripts/bootup/systemd/lkrg-systemd.sh"
    regex: -f5
    replace: -f7
    mode: '0644'
  when: ansible_distribution_release == 'xenial'

- import_tasks: immutable.yml
  vars:
    target_dir: /lib/modules
    state: pre
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install lkrg
  ansible.builtin.command: make install  # noqa 301
  args:
    chdir: "{{ install_archives }}/lkrg-{{ harden_lkrg_version }}"

- import_tasks: immutable.yml
  vars:
    target_dir: /lib/modules
    state: post
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: start lkrg if not container
  ansible.builtin.systemd:
    name: lkrg
    state: started
    enabled: yes

- name: Configure lkrg sysctl
  sysctl:
    name: "lkrg.{{ item.n }}"
    value: "{{ item.v }}"
    sysctl_set: yes
    state: present
    reload: yes
  with_items: "{{ harden_lkrg_sysctl | default([]) }}"
