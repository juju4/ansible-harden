---
## usual suspects:
#    http://bastille-linux.sourceforge.net/
#    https://cisofy.com/lynis/
#    https://fedorahosted.org/aqueduct/wiki
## https://github.com/fcaviggia/hardening-script-el6
## https://github.com/major/securekickstarts

- name: Include version-specific variables for Ubuntu.
  ansible.builtin.include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
- name: Include version-specific variables for Debian.
  ansible.builtin.include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  when: ansible_distribution == 'Debian'
- name: Include version-specific variables for RedHat
  ansible.builtin.include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == "RedHat"
- name: Include version-specific variables for Alpine
  ansible.builtin.include_vars: "Alpine.yml"
  when: ansible_os_family == "Alpine"

- import_tasks: travis.yml
  when: ansible_os_family != "Windows"

- name: Ensure archives folder exists
  ansible.builtin.file:
    dest: "{{ install_archives }}"
    state: directory
    mode: '0700'

- import_tasks: debian-apt-source.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Debian | update apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"

## FIXME! travis/docker/xenial+trusty: 'Error: No information about packages!
##    (Maybe no deb entries?)\r\ndpkg: error processing package apt-show-versions (--configure)'
## https://groups.google.com/forum/#!topic/beagleboard/jXb9KhoMOsk  = Not that, settings non-existent
- name: Install some hardening packages
  ansible.builtin.package:
    name: "{{ harden_pkg }}"
    state: present
  register: pkg_result
  until: pkg_result is success
- name: Install some hardening packages - not in container
  ansible.builtin.package:
    name: "{{ harden_pkg_not_container | default([]) }}"
    state: present
  register: pkg_result
  until: pkg_result is success
  when: not (ansible_virtualization_type is defined and
              (ansible_virtualization_type == 'lxc' or ansible_virtualization_type == 'docker')
            )
- name: Remove some packages
  ansible.builtin.package:
    name: "{{ harden_pkg_remove }}"
    state: absent
    # purge: yes
  register: pkg_result
  until: pkg_result is success

- name: Arpwatch
  block:
    - name: Install arpwatch
      ansible.builtin.package: name=arpwatch state=present
      register: pkg_result
      until: pkg_result is success
    - name: Ensure arpwatch service is enabled and started
      ansible.builtin.service: name=arpwatch state=started enabled=yes
  when: >
    harden_arpwatch and
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        )
- name: Install arpwatch
  ansible.builtin.package:
    name: arpwatch
    state: absent
  when: >
    not harden_arpwatch or
    (ansible_virtualization_type is defined and
      (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
    )
  register: pkg_result
  until: pkg_result is success

- import_tasks: linux.yml
  when: ansible_system == 'Linux'

- name: Debian | Harden
  import_tasks: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Redhat | Harden
  import_tasks: redhat.yml
  when: ansible_os_family == "RedHat"

- name: Alpine | Harden
  import_tasks: alpine.yml
  when: ansible_os_family == "Alpine"

- import_tasks: unix.yml
  when: ansible_system == 'Linux' or ansible_distribution == 'OpenBSD'

- import_tasks: restrict_compiler.yml
  when: harden_restrict_compiler is defined and harden_restrict_compiler

- import_tasks: bash2syslog.yml
  when: harden_bash2syslog is defined and harden_bash2syslog

- import_tasks: root-forward.yml
  when: harden_rootforward is defined and harden_rootforward

- import_tasks: fail2ban.yml
  when: >
    not (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int >= 8)

- import_tasks: vim-swapfiles.yml
- import_tasks: llmnr-systemd.yml

- import_tasks: testing.yml
  when: harden_testing
