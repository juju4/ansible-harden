---

- name: Ensure aide package is installed
  package: name=aide state=present
  register: pkg_result
  until: pkg_result is success

- block:
    - name: Debian | set aide binary name
      set_fact:
        aide_bin: aide.wrapper
    - name: copy patch for aide
      template:
        src: "{{ aide_hids_cron_patch | default('patch-cron.daily-aide') }}"
        dest: /root/patch-cron.daily-aide
        mode: '0400'
    - name: Check if aide cron has been already patched
      stat: path=/etc/cron.daily/.aide-harden-patch
      register: aidepatch
    - block:
        ## FIXME! patch module not idempotent so adding file marker
        - name: Patch cron.daily/aide to rotate database
          patch:
            src: /root/patch-cron.daily-aide
            dest: /etc/cron.daily/aide
            remote_src: yes
            backup: "{{ harden_backup | default(false) }}"
        - file: dest=/etc/cron.daily/.aide-harden-patch state=touch
      when: not aidepatch.stat.exists
    - name: Review Aide configuration
      lineinfile:
        # dest='/etc/default/aide' regexp='^COPYNEWDB=' line='COPYNEWDB=ifnochange'
        dest: '/etc/default/aide'
        regexp: '^COPYNEWDB='
        line: 'COPYNEWDB=rotate'
        mode: '0644'
    - name: Review Aide configuration
      replace:
        dest: '/etc/default/aide'
        regexp: '^FILTERUPDATES=no'
        replace: 'FILTERUPDATES=yes'
        mode: '0644'
    - name: Add custom configuration for aide HIDS
      copy: "src={{ item }} dest=/etc/aide/aide.conf.d owner=root mode=0644"
      with_items: "{{ harden_aide_extra_conf }}"
      register: aidecustomconf
    - name: check global aide config if changed
      command: "aide.wrapper -D -c /var/lib/aide/aide.conf.autogenerated --verbose"
      when: aidecustomconf.changed
      changed_when: false

    - name: Review Aide cron configuration
      replace:
        dest: '/etc/cron.daily/aide'
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
        mode: '0755'
      with_items:
        ## or 'setfacl -m u:nagios:r-- /var/log/aide/aide.log'
        # - { regexp: 'savelog -t -g adm -m 640', replace: 'savelog -t -g adm -m 644' }
        - { regexp: 'savelog -t -g adm -m 64? -u root -c 7 "$LOGFILE" > /dev/null$',
            replace: 'savelog -t -g adm -m 640 -u root -c 7 "$LOGFILE" > /dev/null &&
                setfacl -m u:nagios:r-- "$LOGFILE" 2> /dev/null'
        }
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- block:
    - name: RedHat | set aide binary name
      set_fact:
        aide_bin: aide
    - name: review aide settings
      replace:
        dest: /etc/aide.conf
        regexp: "{{ item.re }}"
        replace: "{{ item.rep }}"
        mode: '0644'
        backup: "{{ harden_backup | default(false) }}"
      with_items:
        - { re: '^gzip_dbout=.*', rep: 'gzip_dbout=no' }
        - { re: '^database=file:.*', rep: 'database=file:@@{DBDIR}/aide.db' }
        - { re: '^database_out=file:.*', rep: 'database_out=file:@@{DBDIR}/aide.db.new' }
    - name: add daily cron to check and update aide db
      copy: src=cron.daily-aide-redhat.j2 dest=/etc/cron.daily/aide mode=0700
  when: ansible_os_family == "RedHat"


## aide at the end of provisioning?
- name: Check if aide database exists
  stat: path=/var/lib/aide/aide.db
  register: aidedb
- name: Debug | aidedb var
  debug: var=aidedb
- name: Generating initial Aide database and backup
  command: "{{ item }}"
  with_items:
    - "{{ aide_bin }} -i"
    - mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
    - cp /var/lib/aide/aide.db /var/lib/aide/aide.db.origin
  when: >
    not aidedb.stat.exists and harden_init_aidedb is defined and harden_init_aidedb and
    (travisci is not defined or not travisci)
  async: 3600
  poll: 300
