---
# https://isc.sans.edu/forums/diary/Finding+Privilege+Escalation+Flaws+in+Linux/19207

- name: Ensure user _test is present
  user:
    name: _test
    state: present
  when: ansible_os_family != "Alpine"

- name: Alpine | Add _test user
  command: "adduser -D _test creates=/home/_test"
  become: yes
  ignore_errors: true
  when: ansible_os_family == "Alpine"
- name: Alpine | Unlock user
  command: "passwd -u _test"
  ignore_errors: true
  when: ansible_os_family == "Alpine"

- name: retrieve unix-privesc-check
  get_url:
    url: http://pentestmonkey.net/tools/unix-privesc-check/unix-privesc-check-1.4.tar.gz
    dest: /tmp/unix-privesc-check-1.4.tar.gz
    checksum: 'sha256:e1f85e7f69fabadd23756a3d76a0e3d864b21e28763b60ce2e6181290d1c1969'
    mode: '0644'
  register: upc
  until: upc is success
  ignore_errors: true

- name: Ensure GNU tar is present
  package:
    name: tar
    state: present
  register: pkg_result
  until: pkg_result is success

- name: unarchive unix-privesc-check
  unarchive:
    src: /tmp/unix-privesc-check-1.4.tar.gz
    dest: /tmp/
    mode: '0755'
    remote_src: true
  become: yes
  become_user: _test
  when: upc is succeeded
  ignore_errors: true

- name: execute unix-privesc-check
  shell: "/tmp/unix-privesc-check-1.4/unix-privesc-check detailed | tee /tmp/unix-privesc-check.out"
  ignore_errors: true
  register: privcheck
  args:
    creates: /tmp/unix-privesc-check.out
  become: yes
  become_user: _test
  when: upc is succeeded and harden_testing_privesc_upc|bool

# - debug: var=privcheck.stdout_lines
- name: grep error+warning of unix-privesc
  shell: >
    egrep --color=always '(ERROR|WARNING)' /tmp/unix-privesc-check.out |
        grep -v "Can't find full path of running program:" | sort | uniq
  changed_when: false
  ignore_errors: true
  when: upc is succeeded

## FIXME: cert issue on ubuntu trusty - hash
## FIXME: in some case, server returns 206 Partial Content
- name: retrieve linuxprivchecker
  get_url:
    url: https://raw.githubusercontent.com/sleventyeleven/linuxprivchecker/master/linuxprivchecker.py
    dest: /tmp/linuxprivchecker.py
    checksum: 'sha256:5803b49fe825c62221caf3004dc70e50a744480677f8989ef51ec6e175f5eedc'
    mode: '0644'
    validate_certs: false
  become: yes
  become_user: _test
  register: dl_result
  until: dl_result is success

- name: execute linuxprivchecker
  shell: "python /tmp/linuxprivchecker.py | tee /tmp/linuxprivchecker.out"
  register: linuxprivchecker
  args:
    creates: /tmp/linuxprivchecker.out
  become: yes
  become_user: _test
  ignore_errors: true
  when: harden_testing_privesc_lpc|bool

# - debug: var=linuxprivchecker.stdout_lines

- name: Ensure git is present
  package:
    name: git
    state: present
  register: pkg_result
  until: pkg_result is success

# http://www.kitploit.com/2017/11/kernelpop-kernel-privilege-escalation.html
# https://github.com/spencerdodd/kernelpop
- name: retrieve kernelpop
  git:
    repo: 'https://github.com/spencerdodd/kernelpop'
    dest: /home/_test/kernelpop
    version: "{{ harden_kernelpop_version | default('b3467d3c64f9657a822c1f3c0d70769efabebf60') }}"
    update: no
  become: yes
  become_user: _test

- name: ensure python3 is present
  package:
    name: "{{ python3_pkg | default('python3') }}"
    state: present
  register: pkg_result
  until: pkg_result is success

- name: execute kernelpop
  shell: |
    set -o pipefail
    {{ python3_bin | default('python3') }} kernelpop.py -b | tee /tmp/kernelpop.out
  args:
    executable: /bin/bash
    chdir: /home/_test/kernelpop
    creates: /tmp/kernelpop.out
  become: yes
  become_user: _test

- name: retrieve linux-exploit-suggester.sh
  get_url:
    url: https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh
    dest: /tmp/linux-exploit-suggester.sh
    checksum: 'sha256:76fe6e088e5b0c3d228c38312a8b6520306a4cb46e45012074a09487e7eb2fd5'
    mode: '0644'
    validate_certs: false
  become: yes
  become_user: _test
  register: dl_result
  until: dl_result is success

- name: execute linux-exploit-suggester.sh
  shell: "bash /tmp/linux-exploit-suggester.sh | tee /tmp/linux-exploit-suggester.out"
  register: les
  args:
    creates: /tmp/linux-exploit-suggester.out
  become: yes
  become_user: _test
  ignore_errors: true

- name: retrieve linux-exploit-suggester-2.pl
  get_url:
    url: https://raw.githubusercontent.com/jondonas/linux-exploit-suggester-2/master/linux-exploit-suggester-2.pl
    dest: /tmp/linux-exploit-suggester-2.pl
    checksum: 'sha256:25059d8478d020509ed498f54668dad1dd1b382988c8f015e04b4635c468e428'
    mode: '0644'
    validate_certs: false
  become: yes
  become_user: _test
  register: dl_result
  until: dl_result is success

- name: execute linux-exploit-suggester-2.pl
  shell: "perl /tmp/linux-exploit-suggester-2.pl | tee /tmp/linux-exploit-suggester-2.out"
  register: les
  args:
    creates: /tmp/linux-exploit-suggester-2.out
  become: yes
  become_user: _test
  ignore_errors: true
