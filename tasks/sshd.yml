---
## or separate role like https://github.com/dev-sec/ansible-ssh-hardening

- name: Check if /etc/ssh/ssh_host_ed25519_key exists
  ansible.builtin.stat: path=/etc/ssh/ssh_host_ed25519_key
  register: sshkey
- name: Generate any missing SSH host key
  ansible.builtin.command: ssh-keygen -A
  when: >
    not sshkey.stat.exists and
    ((ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7) or
      ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == "Alpine"
    )

- name: Ensure sshd groups exist
  ansible.builtin.group:
    name: "{{ item }}"
    state: present
    system: yes
  with_items:
    - sftp-users
    - forwarding-users
    - restricted-users
  when: ansible_distribution != "Alpine"

- name: Alpine | Ensure sshd groups exist
  ansible.builtin.command: "addgroup {{ item }}"
  with_items:
    - sftp-users
    - forwarding-users
    - restricted-users
  failed_when: false
  when: ansible_distribution == "Alpine"

- name: ensure privsep directory for sshd at reboot (systemd-tmpfiles)
  ansible.builtin.lineinfile:
    dest: /etc/tmpfiles.d/sshd.conf
    line: '    d    /run/sshd   0755 root root - -'
    mode: '0644'
    create: yes
  when: >
    ansible_service_mgr == 'systemd' and
    (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 18)

- name: ensure privsep directory for sshd
  ansible.builtin.file:
    dest: /run/sshd
    mode: '0755'
    state: directory
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 18)

- import_tasks: sshd-certificates.yml
  when: harden_sshd_ca_gen

- name: Configure sshd_config
  ansible.builtin.template:
    src: "{{ harden_sshd_template }}"
    dest: /etc/ssh/sshd_config
    mode: '0600'
    owner: '0'
    group: '0'
    backup: "{{ harden_backup | default(false) }}"
    validate: "{{ sshd_validate | default('sshd -f %s -T') }}"
  notify:
    - restart sshd

- name: Check /etc/ssh/moduli for weak values
  ansible.builtin.shell: |
    set -o pipefail
    awk '$5 < 2047 && $5 ~ /^[0-9]+$/ { print $5 }' /etc/ssh/moduli | uniq | wc -c
  args:
    executable: /bin/bash
  changed_when: false
  register: moduli

- block:
    - name: Clean /etc/ssh/moduli
      # just remove weak ones
      ansible.builtin.shell: |
        set -o pipefail
        awk '$5 >= 2000' /etc/ssh/moduli > /etc/ssh/moduli.strong
      args:
        executable: /bin/bash
        creates: /etc/ssh/moduli.strong
    - name: Use /etc/ssh/moduli.strong
      # re-generate. much longer
      # shell: >
      #   ssh-keygen -G /etc/ssh/moduli.all -b 4096 &&
      #   ssh-keygen -T /etc/ssh/moduli.safe -f /etc/ssh/moduli.all &&
      #   mv /etc/ssh/moduli.safe /etc/ssh/moduli"
      ansible.builtin.copy:
        src: /etc/ssh/moduli.strong
        dest: /etc/ssh/moduli
        mode: '0644'
        remote_src: true
  when: moduli.stdout|int != 0
