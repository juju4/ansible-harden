---

- name: Redhat| Remove some packages
  yum:
    name: rpcbind
    state: absent
  when: harden_use_rpc is not defined or not harden_use_rpc
  register: pkg_result
  until: pkg_result is success

## https://help.ubuntu.com/lts/serverguide/automatic-updates.html
## FIXME! slow... even when rerun
- block:
    - name: yum | upgrade all packages to the latest version
      yum: name=* state=latest  # noqa 403
      async: 3600
      poll: 300
      register: pkg_result
      until: pkg_result is success
    - name: Debug | pkg_result var
      debug: var=pkg_result.stdout_lines
  when: (harden_upgradeall is defined and harden_upgradeall) and (travisci is not defined or not travisci)

- name: set better login.defs - redhat only
  lineinfile:
    dest: /etc/login.defs
    regexp: "{{ item.r }}"
    line: "{{ item.l }}"
    mode: '0644'
  with_items:
    - { r: '^PASS_MIN_LEN', l: 'PASS_MIN_LEN    10' }

- name: Check login.defs permissions
  file:
    dest: /etc/login.defs
    owner: root
    group: root
    mode: '0444'

- name: Ensure initscripts package is present
  package:
    name: initscripts
    state: present
  register: pkg_result
  until: pkg_result is success
  when: >
    not (ansible_distribution_major_version|int == 8)

- name: password set for single mode
  lineinfile:
    dest: /etc/sysconfig/init
    regexp: '^SINGLE='
    line: 'SINGLE=/sbin/sulogin'
    mode: '0644'
  when: >
    not (ansible_distribution_major_version|int == 8)

- name: Debug | ansible_virtualization_type var
  debug: var=ansible_virtualization_type
- name: Container inside | disable incompatible daemons
  set_fact:
    harden_services_containers: []
  when: >
    (ansible_virtualization_type is defined and
      (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
    )
- name: Redhat | Ensure services are running and enabled on boot.
  service: name={{ item }} state=started enabled=yes
  with_items:
    - "{{ harden_services }}"
    - "{{ harden_services_containers }}"

- name: initialize rootkithunter db
  command: "rkhunter --propupd creates=/var/lib/rkhunter/db/rkhunter.dat"
  when: >
    not (ansible_distribution_major_version|int == 8)

- import_tasks: selinux.yml
  when: >
    not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        ) and
    not (ansible_distribution_major_version|int == 8)

- import_tasks: yum-cron.yml
  when: >
    harden_security_update_auto and
    not (ansible_distribution_major_version|int == 8)

- name: Ensure YUM Removes Previous Package Versions
  lineinfile:
    dest: /etc/yum.conf
    regexp: '^clean_requirements_on_remove=.*'
    line: 'clean_requirements_on_remove=1'
    mode: '0644'

- name: Ensure gpgcheck Enabled for Local Packages
  lineinfile:
    dest: /etc/yum.conf
    regexp: '^localpkg_gpgcheck=.*'
    line: 'localpkg_gpgcheck=1'
    mode: '0644'

- name: Disable the Automounter
  service:
    name: autofs
    enabled: no
    state: stopped
  failed_when: false

# password-auth: Set Deny For Failed Password Attempts - CCE-27350-8, CCE-26884-7
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/chap-hardening_your_system_with_tools_and_services#sect-Security_Guide-Workstation_Security-Account_Locking = Keeping Custom Settings with authconfig
# system-auth: CCE-26923-3, CCE-27286-4
- name: Configure pam.d local system-auth and password-auth
  template:
    src: "rhel-{{ item }}.j2"
    dest: "/etc/pam.d/{{ item }}"
    mode: '0644'
    backup: "{{ harden_backup | default(false) }}"
  with_items:
    - password-auth-local
    - system-auth-local

- name: Link pam.d local system-auth and password-auth
  file:
    src: "{{ item }}-local"
    dest: "/etc/pam.d/{{ item }}"
    mode: '0644'
    state: link
  with_items:
    - password-auth
    - system-auth
  failed_when: false
