---
name: default-bare

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:  # run weekly, every Wednesday 03:00
    - cron: '0 3 * * 3'

permissions: {}

jobs:
  build:
    permissions:
      contents: read
    runs-on: ${{ matrix.distribution }}-${{ matrix.version }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - distribution: ubuntu
            version: '24.04'
            suite: default
            experimental: false
          - distribution: ubuntu
            version: '22.04'
            suite: default
            experimental: false
          - distribution: ubuntu
            version: '24.04'
            suite: full
            experimental: false
          - distribution: ubuntu
            version: '24.04'
            suite: default-norsyslog
            experimental: false
    env:
      ANSIBLE_CALLBACKS_ENABLED: profile_tasks
      ANSIBLE_EXTRA_VARS: "-e harden_sshd_remote_src=yes -e harden_testing_privesc_upc=false -e harden_testing_privesc_lpc=false -e inspec_dir=/home/runner/work/ansible-harden/ansible-harden/juju4.harden/test/integration/default"
      ANSIBLE_ROLE: juju4.harden
      ANSIBLE_SUITE: ${{ matrix.suite }}

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # tag=v5.0.0
        with:
          path: ${{ env.ANSIBLE_ROLE }}
      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # tag=v6.0.0
        with:
          python-version: '3.x'
      - name: Cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809  # tag=v4.2.4
        with:
          path: |
            /var/cache/apt/archives
            /var/lib/apt
            /var/_install
          key: cache-ansible-harden-${{ steps.get-date.outputs.date }}
      - name: ACL
        run: |
          sudo apt-get install -y acl || true
          mount
          sudo mount -o remount,acl / || true
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install ansible-lint flake8 yamllint
          which ansible
          pip3 install ansible
          pip3 show ansible
          ls -l $HOME/.local/bin || true
          ansible --version
          cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE
          [ -f get-dependencies.sh ] && sh -x get-dependencies.sh
          [ -f molecule/$ANSIBLE_SUITE/requirements.yml ] && ansible-galaxy install -r molecule/$ANSIBLE_SUITE/requirements.yml
          { echo '[defaults]'; echo 'callback_enabled = profile_tasks, timer'; echo 'roles_path = ../:/home/runner/.ansible/roles'; echo 'ansible_python_interpreter: /usr/bin/python3'; } >> ansible.cfg
      - name: Environment
        run: |
          set -x
          pwd
          env
          find -ls
      - name: lsattr
        run: |
          set -x
          sudo apt-get install -y e2fsprogs || true
          sudo lsattr / -R -a 2> /dev/null | grep "\----i" > /tmp/lsattr-i-1 || true
      - name: run test
        run: |
          cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-playbook -i localhost, --connection=local --become -vvv test/integration/$ANSIBLE_SUITE/default.yml ${ANSIBLE_EXTRA_VARS}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: idempotency run
        run: |
          cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-playbook -i localhost, --connection=local --become -vvv test/integration/$ANSIBLE_SUITE/default.yml ${ANSIBLE_EXTRA_VARS} | tee /tmp/idempotency.log | grep -q 'changed=0.*failed=0'  && (echo 'Idempotence test: pass' && exit 0)  || (echo 'Idempotence test: fail' && cat /tmp/idempotency.log && exit 0)
      - name: On failure
        run: |
          systemctl -l --no-pager status
          systemctl -l --no-pager --failed
          ls -l /usr/bin/ | egrep '(python|pip|ansible)'
          pip freeze
          pip3 freeze
          ip addr
          cat /etc/resolv.conf
          host www.google.com
          ping -c 1 www.google.com || true
          ping -c 1 8.8.8.8 || true
        if: ${{ failure() }}
        continue-on-error: true
      - name: After script - ansible setup
        run: |
          ansible -i inventory --connection=local -m setup localhost
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - systemd
        run: |
          systemctl -l --no-pager status iptables || true
          systemctl -l --no-pager status netfilter-persistent || true
          systemctl -l --no-pager status openntpd || true
          systemctl -l --no-pager status ntpd || true
          systemctl -l --no-pager status chronyd || true
          systemctl -l --no-pager status monit
          systemd-analyze --no-pager security || true
          rsyslogd -v
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - network
        run: |
          sudo iptables -L -vn
          sudo iptables-save
          sudo ip6tables -L -vn
          sudo ip6tables-save
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - scap
        run: |
          ls -la /usr/share/xml/scap/ssg/content/
          perl -pi -e \"s@platform idref=\\\"cpe:/o:redhat:enterprise_linux:${version}\\\"@platform idref=\\\"cpe:/o:centos:centos:${version}\\\"@\" /usr/share/xml/scap/ssg/content/ssg-rhel${version}-ds.xml"
          oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_pci-dss --results-arf arf-pci.xml --report report-pci.html /usr/share/xml/scap/ssg/content/ssg-rhel${version}-ds.xml"
          oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_stig-rhel${version}-disa --results-arf arf-disa.xml --report report-disa.html /usr/share/xml/scap/ssg/content/ssg-rhel${version}-ds.xml"
          oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_anssi_np_nt28_restrictive --results-arf arf.xml --report report.html /usr/share/scap-security-guide/ssg-ubuntu1604-ds.xml"
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - etc
        run: |
          set -x
          cat /etc/passwd
          cat /etc/rsyslog.conf
          find /etc/rsyslog.d -type f -exec cat {} \;
          cat /etc/ntp.conf /etc/sysconfig/ntpd /etc/default/ntp /etc/chrony.conf || true
          cat /etc/openntpd/ntpd.conf /etc/ntpd.conf || true
          ls -l /etc/login.defs
          cat /etc/login.defs
          ls -la /etc
          ls -la /etc/ssh/
          cat /etc/ssh/sshd_config
          cat /etc/ssh/ssh_config
          ls -l /etc/pam.d/
          cat /etc/pam.d/system-auth || true
          cat /etc/pam.d/password-auth || true
          cat /etc/logrotate.conf || true
          cat /etc/security/pwquality.conf || true
          ls -laR /etc/monit/
          sudo cat /etc/monit/monitrc
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - ssh
        run: |
          set -x
          ls -la /etc/ssh/
          cat /etc/ssh/sshd_config
          cat /etc/ssh/ssh_config
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - aide hids
        run: |
          set -x
          ls -laR /etc/aide/
          cat /etc/aide/aide.conf
          cat /usr/local/scripts/cron.daily-aide
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - files
        run: |
          set -x
          ls -lR /var/lib/ntp /var/ntp/drift /var/lib/openntpd || true
          ls -l /var/db/ntp.drift /var/ntp/drift/ /var/lib/ntp/ /var/lib/openntpd/db/ /var/lib/chrony/ || true
          ls -l /boot/grub2/grub.cfg || true
          ls -l /var/lib/aide/
          ls -la /tmp/ || true
          sudo rpm -Va | grep '^..5' || true
          sudo ls -la /tmp/cadir/ || true
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - run files
        run: |
          set -x
          ls -lR /var/run/ /run/
        if: ${{ always() }}
        continue-on-error: true
      - name: lsattr2
        run: |
          set -x
          sudo lsattr / -R -a 2> /dev/null | grep "\----i" > /tmp/lsattr-i-2 || true
          sdiff /tmp/lsattr-i-* || true
        if: ${{ always() }}
        continue-on-error: true
      - name: logs dir
        run: |
          set -x
          sudo ls -la /var/log/
        if: ${{ always() }}
        continue-on-error: true
      - name: journald logs
        run: |
          set -x
          sudo systemctl list-unit-files --all
          sudo journalctl --field _SYSTEMD_UNIT
        if: ${{ always() }}
        continue-on-error: true
      - name: logcheck
        run: |
          set -x
          sudo sed -f /etc/logcheck/logcheck.replace test/logcheck-test-data.log
          sudo sed -f /etc/logcheck/logcheck.replace test/logcheck-test-data-delete.log
        if: ${{ always() }}
        continue-on-error: true
      - name: apparmor
        run: |
          set -x
          sudo apparmor_status
          sudo journalctl -xe -g apparmor -l --no-pager | tail -500
        if: ${{ always() }}
        continue-on-error: true
